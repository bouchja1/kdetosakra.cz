upstream frontend {
   server web:80;
}

server {
   listen 80 default_server;
   listen [::]:80 default_server;
   server_name _;
   location / {
     return 301 https://$host$request_uri;
   }

}

server {

   listen 443 ssl http2 default_server;
   listen [::]:443 ssl http2 default_server;
   server_name kdetosakra.cz;

   location /.well-known/acme-challenge/ {
      root /var/www/certbot;
   }

   # A+ on ssllabs.com/ssltest
   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
   server_tokens off;

   ssl_certificate /etc/letsencrypt/live/kdetosakra.cz/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/kdetosakra.cz/privkey.pem;
   include /etc/letsencrypt/options-ssl-nginx.conf;
   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   # default location doing ssl termination.
   # forwards to an upstream host on the docker network http://$host:80
   location / {
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $http_connection;
       #proxy_http_version 1.1;
       proxy_redirect off;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header X-Https-Protocol $ssl_protocol;
       client_max_body_size 10M;

       # TODO add proxy bypassing?

       resolver 127.0.0.11; # use docker-internal dns
       proxy_pass http://frontend/;
   }

   # you can add other locations which are connected to an upstream server

   error_page   500 502 503 504  /50x.html;

   location = /50x.html {
       root   /usr/share/nginx/html;
   }

}
